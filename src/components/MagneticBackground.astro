---

---

<div id="magnetic-background" class="fixed inset-0 -z-10">
  <canvas id="magnetic-canvas"></canvas>
</div>

<script>
  import * as THREE from 'three'
  import { magneticBackgroundStore } from '../stores/magneticBackgroundStore'

  function initBackground() {
    const canvas = document.getElementById(
      'magnetic-canvas',
    ) as HTMLCanvasElement
    if (canvas) {
      magneticBackgroundStore.init(canvas)
    }
  }

  // Initialize on page load
  if (document.readyState === 'complete') {
    initBackground()
  } else {
    document.addEventListener('DOMContentLoaded', initBackground)
  }

  // Ensure the background persists during route changes
  document.addEventListener('astro:before-swap', (event) => {
    const magneticBackgroundElement = document.getElementById(
      'magnetic-background',
    )
    if (magneticBackgroundElement) {
      event.preventDefault()
    }
  })

  // Update canvas reference after route changes
  document.addEventListener('astro:after-swap', () => {
    const canvas = document.getElementById(
      'magnetic-canvas',
    ) as HTMLCanvasElement
    if (canvas) {
      magneticBackgroundStore.subscribe((background: any) => {
        if (background && 'updateCanvas' in background) {
          background.updateCanvas(canvas)
        }
      })()
    }
  })

  // Update point color based on theme
  function updatePointColor() {
    const isDark = document.documentElement.classList.contains('dark')
    magneticBackgroundStore.subscribe((background: any) => {
      if (background && 'points' in background) {
        const material = background.points.material as THREE.PointsMaterial
        material.color.setHex(isDark ? 0xffffff : 0x000000)
      }
    })()
  }

  // Initial color update
  updatePointColor()

  // Update color when theme changes
  document.addEventListener('astro:after-swap', updatePointColor)

  // Listen for theme changes
  const observer = new MutationObserver((mutations) => {
    mutations.forEach((mutation) => {
      if (mutation.attributeName === 'class') {
        updatePointColor()
      }
    })
  })
  observer.observe(document.documentElement, { attributes: true })
</script>

<style>
  #magnetic-background {
    pointer-events: none;
  }
  #magnetic-canvas {
    width: 100%;
    height: 100%;
  }
</style>
